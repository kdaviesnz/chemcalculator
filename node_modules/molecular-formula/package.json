{
  "_from": "molecular-formula",
  "_id": "molecular-formula@1.1.4",
  "_inBundle": false,
  "_integrity": "sha512-jg5TwyhwHHY1XSYhPc/sKewzHzSB/bVXayJ9Fq0PQacF7AOWJeA9DwrHnVu3CtSfT4fkxrGlplhVN16zP6jTlQ==",
  "_location": "/molecular-formula",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "molecular-formula",
    "fetchSpec": "latest",
    "name": "molecular-formula",
    "raw": "molecular-formula",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/molecular-formula/-/molecular-formula-1.1.4.tgz",
  "_shasum": "d4268bd84fd0e81a11661a1e2b43d634c77be7c8",
  "_spec": "molecular-formula",
  "_where": "/Applications/MAMP/htdocs/chemcalculator",
  "author": {
    "email": "michaelporter.chemistry@gmail.com",
    "name": "Michael Porter"
  },
  "bugs": {
    "url": "https://github.com/emptyport/molecular-formula/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "isotope-abundances": "^2.0.3"
  },
  "deprecated": false,
  "description": "A library for working with molecular-formula",
  "devDependencies": {
    "chai": "^4.1.2",
    "fs": "0.0.1-security",
    "mocha": "^5.2.0"
  },
  "homepage": "https://github.com/emptyport/molecular-formula#readme",
  "keywords": [
    "chemical",
    "chemistry",
    "formula",
    "mass",
    "molecular"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "molecular-formula",
  "optionalDependencies": {},
  "readme": "# molecular-formula\nA simple library to work with molecular formula.\n\nView on npm [here](https://www.npmjs.com/package/molecular-formula).\n\n\n## Installation\nnpm install molecular-formula --save\n\n## Usage\n#### Creating a new molecular formula and accessing the formula\nTo use this module, import it and then create a new molecular formula.\n``` javascript\nvar molFormula = require('molecular-formula');\nvar water = new molFormula('H2O');\n```\nYou can retrieve the original formula like so.\n``` javascript\nvar original_formula = water.getFormula();\n```\nYou also have access to the elemental composition.\n``` javascript\nvar composition = water.getComposition();\n```\nOutput:\n```\n{\n  H: 2,\n  O: 1\n}\n```\nCreating formula with parantheses is also supported.\n``` javascript\nvar ammonium_phosphate = new molFormula('(NH4)3PO4');\n```\nThere is a method for providing the simplified, condensed molecular formula in cases like this.\n``` javascript\nvar simplified_formula = ammonium_phosphate.getSimplifiedFormula();\n```\nOutput:\n```\nN3H12PO4\n```\nThis can be useful in cases where perhaps you have a carbon chain where all the components are kept separate (e.g. CH3(CH2)4CH2OH).\n\n#### Adding and subtracting elements\nYou also have the ability to add and subtract elements from the formula with the ```add``` and ```subtract``` functions. You can pass in either a string representation of what you want to add or a JSON object.\n\nExample usage:\n``` javascript\nammonium_phosphate.add('NaCl');\nammonium_phosphate.getSimplifiedFormula();\n// This will give you N3H12PO4NaCl\nammonium_phosphate.subtract({ 'Na': 1, 'Cl': 1 });\nammonium_phosphate.getSimplifiedFormula();\n// This will give you N3H12PO4 again\n```\n\n*Please note that once you add or subtract elements, the getFormula() function will return the same thing as the getSimplifiedFormula() function.*\n\n#### Molecular mass\nYou can retrieve the molecular mass of a formula by using the ```getMass()``` function.\n\nExample usage:\n``` javascript\nwater.getMass();\n// This gives 18.01528\n```\n\n## Tests\nYou can run `npm test` to run the tests after installing the development dependencies.\n\n## Future functionality\nThere are currently no planned improvements to this module. I am open to suggestions so let me know if you think something is missing.\n\n## License\nThis software is released under the MIT license\n\n## Support this project!\n\n[![Support this project on Patreon!](https://c5.patreon.com/external/logo/become_a_patron_button.png)](https://www.patreon.com/MikeTheBiochem)",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/emptyport/molecular-formula.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "1.1.4"
}
